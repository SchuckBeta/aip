<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oseasy.initiate.modules.actyw.tool.query.dao.ActYwRuTaskDao">

	<sql id="actYwRuTaskColumns">
		a.id_ AS "id",
		a.rev_ AS "rev",
		a.execution_id_ AS "executionId",
		a.proc_inst_id_ AS "procInstId",
		a.proc_def_id_ AS "procDefId",
		a.name_ AS "name",
		a.parent_task_id_ AS "parentTaskId",
		a.description_ AS "description",
		a.task_def_key_ AS "taskDefKey",
		a.owner_ AS "owner",
		a.assignee_ AS "assignee",
		a.delegation_ AS "delegation",
		a.priority_ AS "priority",
		a.create_time_ AS "createTime",
		a.due_date_ AS "dueDate",
		a.category_ AS "category",
		a.suspension_state_ AS "suspensionState",
		a.tenant_id_ AS "tenantId",
		a.form_key_ AS "formKey",


		b.id_ AS "hiProcinst.id",
		b.proc_inst_id_ AS "hiProcinst.procInstId",
		b.business_key_ AS "hiProcinst.businessKey",
		b.proc_def_id_ AS "hiProcinst.procDefId",
		b.start_time_ AS "hiProcinst.startTime",
		b.end_time_ AS "hiProcinst.endTime",
		b.duration_ AS "hiProcinst.duration",
		b.start_user_id_ AS "hiProcinst.startUserId",
		b.start_act_id_ AS "hiProcinst.startActId",
		b.end_act_id_ AS "hiProcinst.endActId",
		b.super_process_instance_id_ AS "hiProcinst.superProcessInstanceId",
		b.delete_reason_ AS "hiProcinst.deleteReason",
		b.tenant_id_ AS "hiProcinst.tenantId",


		pd.id AS "projectDeclare.id",
		pd.org_id AS "projectDeclare.orgId",
		pd.plan_content AS "projectDeclare.planContent",
		pd.plan_start_date AS "projectDeclare.planStartDate",
		pd.plan_end_date AS "projectDeclare.planEndDate",
		pd.plan_step AS "projectDeclare.planStep",
		pd.result_type AS "projectDeclare.resultType",
		pd.result_content AS "projectDeclare.resultContent",
		pd.level AS "projectDeclare.level",
		pd.type AS "projectDeclare.type",
		pd.name AS "projectDeclare.name",
		pd.leader AS "projectDeclare.leader",
		pd.number AS "projectDeclare.number",
		pd.introduction AS "projectDeclare.introduction",
		pd.apply_time AS "projectDeclare.applyTime",
		pd.innovation AS "projectDeclare.innovation",
		pd.budget AS "projectDeclare.budget",
		pd.mid_count AS "projectDeclare.midCount",
		pd.mid_result AS "pd.midResult",
		pd.mid_score AS "projectDeclare.midScore",
		pd.final_score AS "projectDeclare.finalScore",
		pd.reply_score AS "projectDeclare.replyScore",
		pd.final_result AS "projectDeclare.finalResult",
		pd.development AS "projectDeclare.development",
		pd.source AS "projectDeclare.source",
		pd.status AS "projectDeclare.status",
		pd.update_date AS "projectDeclare.updateDate",
		pd.update_by AS "projectDeclare.updateBy.id",
		pd.create_date AS "projectDeclare.createDate",
		pd.create_by AS "projectDeclare.createBy.id",
		pd.del_flag AS "projectDeclare.delFlag",
		pd.proc_ins_id AS "projectDeclare.procInsId",
		pd.team_id AS "projectDeclare.teamId",
		pd.template_id AS "projectDeclare.templateId",
		pd.finance_grant AS "projectDeclare.financeGrant",
		pd.university_grant AS "projectDeclare.universityGrant",
		pd.total_grant AS "projectDeclare.totalGrant",
		pd.province AS "projectDeclare.province",
		pd.university_code AS "projectDeclare.universityCode",
		pd.university_name AS "projectDeclare.universityName"
	</sql>

	<sql id="actYwRuTaskJoins">
		LEFT JOIN act_hi_procinst b ON b.id_ = a.proc_inst_id_
		LEFT JOIN project_declare pd ON pd.proc_ins_id = b.id_
	</sql>

	<select id="get" resultType="ActYwRuTask">
		SELECT
			<include refid="actYwRuTaskColumns"/>
		FROM act_ru_task a
		<include refid="actYwRuTaskJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="ActYwRuTask">
		SELECT
			<include refid="actYwRuTaskColumns"/>
		FROM act_ru_task a
		<include refid="actYwRuTaskJoins"/>
		<where>
			1 = 1 AND pd.name != ""
			<if test="procInstId != null and procInstId != ''">
				AND a.proc_inst_id_ = #{procInstId}
			</if>
			<if test="procDefId != null and procDefId != ''">
				AND a.proc_def_id_ = #{procDefId}
			</if>
			<if test="name != null and name != ''">
				AND pd.name LIKE
						<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
						<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
						<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>

			<if test="projectDeclare != null">
				<if test="projectDeclare.name != null and projectDeclare.name != ''">
					AND pd.name LIKE
						<if test="dbName == 'oracle'">'%'||#{projectDeclare.name}||'%'</if>
						<if test="dbName == 'mssql'">'%'+#{projectDeclare.name}+'%'</if>
						<if test="dbName == 'mysql'">concat('%',#{projectDeclare.name},'%')</if>
				</if>
				<if test="projectDeclare.type != null and projectDeclare.type != ''">
					AND pd.type = #{projectDeclare.type}
				</if>
			</if>
			GROUP BY b.id_
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY b.id_ desc, pd.name desc
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ActYwRuTask">
		SELECT
			<include refid="actYwRuTaskColumns"/>
		FROM act_ru_task a
		<include refid="actYwRuTaskJoins"/>
		<where>
			1 = 1 AND pd.name != ""
			<if test="procInstId != null and procInstId != ''">
				AND a.proc_inst_id_ = #{procInstId}
			</if>
			<if test="procDefId != null and procDefId != ''">
				AND a.proc_def_id_ = #{procDefId}
			</if>
			<if test="name != null and name != ''">
				AND pd.name LIKE
						<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
						<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
						<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>

			<if test="projectDeclare != null">
				<if test="projectDeclare.name != null and projectDeclare.name != ''">
					AND pd.name LIKE
						<if test="dbName == 'oracle'">'%'||#{projectDeclare.name}||'%'</if>
						<if test="dbName == 'mssql'">'%'+#{projectDeclare.name}+'%'</if>
						<if test="dbName == 'mysql'">concat('%',#{projectDeclare.name},'%')</if>
				</if>
				<if test="projectDeclare.type != null and projectDeclare.type != ''">
					AND pd.type = #{projectDeclare.type}
				</if>
			</if>
			GROUP BY b.id_
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY b.id_ desc, pd.name desc
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO act_ru_task(
			id_,
			rev_,
			execution_id_,
			proc_inst_id_,
			proc_def_id_,
			name_,
			parent_task_id_,
			description_,
			task_def_key_,
			owner_,
			assignee_,
			delegation_,
			priority_,
			create_time_,
			due_date_,
			category_,
			suspension_state_,
			tenant_id_,
			form_key_
		) VALUES (
			#{id},
			#{rev},
			#{executionId},
			#{procInstId},
			#{procDefId},
			#{name},
			#{parentTaskId},
			#{description},
			#{taskDefKey},
			#{owner},
			#{assignee},
			#{delegation},
			#{priority},
			#{createTime},
			#{dueDate},
			#{category},
			#{suspensionState},
			#{tenantId},
			#{formKey}
		)
	</insert>

	<update id="update">
		UPDATE act_ru_task SET
			id_ = #{id},
			rev_ = #{rev},
			execution_id_ = #{executionId},
			proc_inst_id_ = #{procInstId},
			proc_def_id_ = #{procDefId},
			name_ = #{name},
			parent_task_id_ = #{parentTaskId},
			description_ = #{description},
			task_def_key_ = #{taskDefKey},
			owner_ = #{owner},
			assignee_ = #{assignee},
			delegation_ = #{delegation},
			priority_ = #{priority},
			create_time_ = #{createTime},
			due_date_ = #{dueDate},
			category_ = #{category},
			suspension_state_ = #{suspensionState},
			tenant_id_ = #{tenantId},
			form_key_ = #{formKey}
		WHERE id = #{id}
	</update>

	<update id="delete">
		DELETE FROM act_ru_task
		WHERE id = #{id}
	</update>

</mapper>