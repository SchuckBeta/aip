<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oseasy.pact.modules.actyw.dao.ActYwGclazzDataDao">

	<sql id="actYwGclazzDataColumns">
		a.id AS "id",
		a.apply_id AS "applyId",
		a.type AS "type",
		a.gclazz_id AS "gclazz.id",
		a.is_start AS "isStart",
		a.datas AS "datas",

		g.group_id AS "gclazz.group.id",
		g.gnode_id AS "gclazz.gnode.id",
		g.listener_id AS "gclazz.listener.id",

		c.type AS "gclazz.listener.type",
		c.packag AS "gclazz.listener.packag",
		c.clazz AS "gclazz.listener.clazz",
		c.alias AS "gclazz.listener.alias",
		c.remarks AS "gclazz.listener.remarks",
		c.del_flag AS "gclazz.listener.delFlag"
	</sql>

	<sql id="actYwGclazzDataJoins">
		LEFT JOIN act_yw_gclazz g on g.id = a.gclazz_id
		LEFT JOIN act_yw_clazz c on c.id = g.listener_id
	</sql>

	<select id="get" resultType="ActYwGclazzData">
		SELECT
			<include refid="actYwGclazzDataColumns"/>
		FROM act_yw_gclazz_data a
		<include refid="actYwGclazzDataJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getStart" resultType="ActYwGclazzData">
		SELECT
			<include refid="actYwGclazzDataColumns"/>
		FROM act_yw_gclazz_data a
		<include refid="actYwGclazzDataJoins"/>
		WHERE a.apply_id = #{applyId} AND a.type = #{type} AND a.is_start = '1'
	</select>

	<select id="findListByAgnode" resultType="ActYwGclazzData">
		SELECT
			<include refid="actYwGclazzDataColumns"/>
		FROM act_yw_gclazz_data a
		<include refid="actYwGclazzDataJoins"/>
		<where> a.apply_id = #{applyId} AND g.gnode_id = #{gnodeId}
			<if test="entity != null">
				<if test="entity.type != null and entity.type != ''">
					AND a.type = #{entity.type}
				</if>
				<if test="entity.isStart != null and entity.isStart != ''">
					AND a.is_start = #{entity.isStart}
				</if>

				<if test="entity.gclazz != null">
					<if test="entity.gclazz.id != null and entity.gclazz.id != ''">
						AND a.gclazz_id = #{entity.gclazz.id}
					</if>
					<if test="entity.gclazz.group != null">
						<if test="entity.gclazz.group.id != null and entity.gclazz.group.id != ''">
							AND g.group_id = #{entity.gclazz.group.id}
						</if>
					</if>
					<if test="entity.gclazz.gnode != null">
						<if test="entity.gclazz.gnode.id != null and entity.gclazz.gnode.id != ''">
							AND g.gnode_id = #{entity.gclazz.gnode.id}
						</if>
					</if>
					<if test="entity.gclazz.listener != null">
						<if test="entity.gclazz.listener.id != null and entity.gclazz.listener.id != ''">
							AND g.listener_id = #{entity.gclazz.listener.id}
						</if>
						<if test="entity.gclazz.listener.type != null and entity.gclazz.listener.type != ''">
							AND c.type = #{entity.gclazz.listener.type}
						</if>
						<if test="entity.gclazz.listener.alias != null and entity.gclazz.listener.alias != ''">
							c.alias LIKE
		                        <if test="dbName == 'oracle'">'%'||#{entity.gclazz.listener.alias}||'%'</if>
		                        <if test="dbName == 'mssql'">'%'+#{entity.gclazz.listener.alias}+'%'</if>
		                        <if test="dbName == 'mysql'">concat('%',#{entity.gclazz.listener.alias},'%')</if>
						</if>
					</if>
				</if>
			</if>
		</where>
		<choose>
			<when test="entity !=null and entity.page !=null and entity.page.orderBy != null and entity.page.orderBy != ''">
				ORDER BY ${entity.page.orderBy} ${entity.page.orderByType}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="findList" resultType="ActYwGclazzData">
		SELECT
			<include refid="actYwGclazzDataColumns"/>
		FROM act_yw_gclazz_data a
		<include refid="actYwGclazzDataJoins"/>
		<where> 1 = 1
			<if test="applyId != null and applyId != ''">
				AND a.apply_id = #{applyId}
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="isStart != null and isStart != ''">
				AND a.is_start = #{isStart}
			</if>

			<if test="gclazz != null">
				<if test="gclazz.id != null and gclazz.id != ''">
					AND a.gclazz_id = #{gclazz.id}
				</if>
				<if test="gclazz.group != null">
					<if test="gclazz.group.id != null and gclazz.group.id != ''">
						AND g.group_id = #{gclazz.group.id}
					</if>
				</if>
				<if test="gclazz.gnode != null">
					<if test="gclazz.gnode.id != null and gclazz.gnode.id != ''">
						AND g.gnode_id = #{gclazz.gnode.id}
					</if>
				</if>
				<if test="gclazz.listener != null">
					<if test="gclazz.listener.id != null and gclazz.listener.id != ''">
						AND g.listener_id = #{gclazz.listener.id}
					</if>
					<if test="gclazz.listener.alias != null and gclazz.listener.alias != ''">
						c.alias LIKE
	                        <if test="dbName == 'oracle'">'%'||#{gclazz.listener.alias}||'%'</if>
	                        <if test="dbName == 'mssql'">'%'+#{gclazz.listener.alias}+'%'</if>
	                        <if test="dbName == 'mysql'">concat('%',#{gclazz.listener.alias},'%')</if>
					</if>
				</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} ${page.orderByType}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ActYwGclazzData">
		SELECT
			<include refid="actYwGclazzDataColumns"/>
		FROM act_yw_gclazz_data a
		<include refid="actYwGclazzDataJoins"/>
		<where>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} ${page.orderByType}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO act_yw_gclazz_data(
			id,
			apply_id,
			type,
			gclazz_id,
			is_start,
			datas
		) VALUES (
			#{id},
			#{applyId},
			#{type},
			#{gclazz.id},
			#{isStart},
			#{datas}
		)
	</insert>

	<insert id="savePl" >
		INSERT INTO act_yw_gclazz_data(
			id,
			apply_id,
			type,
			gclazz_id,
			is_start,
			datas
		) VALUES
		<foreach collection="list" item="item" index="index"
				 separator=",">
			(
			#{item.id},
               #{item.applyId},
               #{item.type},
               #{item.gclazz.id},
               #{item.isStart},
               #{item.datas}
			)
		</foreach>
	</insert>

	<update id="update">
		UPDATE act_yw_gclazz_data SET
			apply_id = #{applyId},
			type = #{type},
			gclazz_id = #{gclazz.id},
			is_start = #{isStart},
			datas = #{datas}
		WHERE id = #{id}
	</update>

	<update id="delete">
		DELETE FROM act_yw_gclazz_data
		WHERE id = #{id}
	</update>

	<update id="deleteWL">
		DELETE FROM act_yw_gclazz_data WHERE id = #{id}
	</update>

	<update id="deleteWLPL">
		DELETE FROM act_yw_gclazz_data WHERE id in
		<foreach item="id" collection="ids" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>

    <update id="deleteWLPLByApply">
            DELETE FROM act_yw_gclazz_data WHERE apply_id = #{applyId}
    </update>

    <update id="deleteWLPLByGzlazz">
            DELETE FROM act_yw_gclazz_data WHERE gclazz_id = #{gclazzId}
    </update>

    <update id="deleteWLPLByClazz">
            DELETE FROM act_yw_gclazz_data WHERE id in (SELECT id FROM act_yw_gclazz WHERE listener_id = #{clazzId})
    </update>

    <update id="deleteWLPLByAgnode">
            DELETE FROM act_yw_gclazz_data WHERE apply_id = #{applyId} AND id in (SELECT id FROM act_yw_gclazz WHERE gnode_id = #{gnodeId})
    </update>
</mapper>