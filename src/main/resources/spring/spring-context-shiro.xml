<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath:initiate.properties" />

	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/common/** = anon
				/css/** = anon
				/img/** = anon
				/js/** = anon
				/other/** = anon
				/static/** = anon
				/userfiles/** = anon
				${adminPath}/cas = cas
				${adminPath}/login = authc
				${adminPath}/logout = logout
				${adminPath}/validateCode/**=anon
				${adminPath}/authorize/**=anon
				${adminPath}/** = user
				/act/editor/** = user
				/ReportServer/** = user
				/upload/** = user
			</value>
		</constructor-arg>
	</bean>
	<bean id="user" class="com.oseasy.pcore.modules.sys.security.UserFilter">
	</bean>
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="${adminPath}/login" />
	</bean>
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" /><!--
			<property name="loginUrl" value="${cas.server.url}?service=${cas.project.url}${adminPath}/cas"
			/> -->
		<property name="loginUrl" value="${adminPath}/login" />
		<property name="successUrl" value="${adminPath}?login" />
		<property name="filters">
			<map>
				<entry key="cas" value-ref="casFilter" />
				<entry key="authc" value-ref="adminFormAuthenticationFilter" />
				<entry key="logout" value-ref="logout" />
				<entry key="user" value-ref="user" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions" />
		</property>
	</bean>

	<!-- CAS认证过滤器 -->
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
		<property name="failureUrl" value="${adminPath}/login" />
	</bean>

	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="systemAuthorizingRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	<!-- 前台配置 *************************** -->
	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFrontFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/common/** = anon
				/css/** = anon
				/img/** = anon
				/js/** = anon
				/other/** = anon
				/static/** = anon
				/userfiles/** = anon
				${frontPath}/login = frontauthc
				${frontPath}/logout = frontlogout
				${frontPath}/project/**=frontuser
				${frontPath}/course/downLoad = frontuser
				${frontPath}/gcontest/gContest/**=frontuser
				${frontPath}/act/task/** = frontuser
				${frontPath}/team/** = frontuser
				${frontPath}/sys/frontStudentExpansion/** = frontuser
				${frontPath}/sys/user/indexMyNoticeList = frontuser
				${frontPath}/sys/frontTeacherExpansion/** = frontuser
				${frontPath}/excellent/** = frontuser
				${frontPath}/scoapply/**=frontuser
				${frontPath}/myscore/**=frontuser
				${frontPath}/cms/form/** = frontuser
				${frontPath}/pw/pwAppointment/** = frontuser
				${frontPath}/proprojectmd/** = frontuser
				${frontPath}/proprojectgt/** = frontuser
				${frontPath}/promodel/** = frontuser
				${frontPath}/proproject/** = frontuser
			</value>
		</constructor-arg>
	</bean>
	<bean id="frontuser"
		class="com.oseasy.pcore.modules.sys.security.FrontUserFilter">
	</bean>
	<!-- 安全认证过滤器 -->
	<bean id="shiroFrontFilter"
		class="com.oseasy.pcore.modules.sys.security.FrontShiroFilterFactoryBean">
		<property name="securityManager" ref="securityFrontManager" /><!--
			<property name="loginUrl" value="${cas.server.url}?service=${cas.project.url}${adminPath}/cas"
			/> -->
		<property name="loginUrl" value="${frontPath}/login" />
		<property name="successUrl" value="${frontPath}?login" />
		<property name="filters">
			<map>
				<entry key="frontcas" value-ref="casFrontFilter" />
				<entry key="frontauthc" value-ref="frontFormAuthenticationFilter" />
				<entry key="frontlogout" value-ref="frontLogoutFilter" />
				<entry key="frontuser" value-ref="frontuser" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFrontFilterChainDefinitions" />
		</property>
	</bean>

	<!-- CAS认证过滤器 -->
	<bean id="casFrontFilter" class="org.apache.shiro.cas.CasFilter">
		<property name="failureUrl" value="${frontPath}/login" />
	</bean>
	<bean id="defineModularRealmAuthenticator" class="com.oseasy.pcore.modules.sys.security.FrontDefautModularRealm">
		<property name="definedRealms">
			<map>
				<entry key="frontPasswAuthorizingRealm" value-ref="frontPasswAuthorizingRealm" />
				<entry key="frontAuthorizingRealm" value-ref="frontAuthorizingRealm" />
				<entry key="frontCasRealm" value-ref="frontCasRealm" />
			</map>
		</property>
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy" />
		</property>
	</bean>
	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityFrontManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="authenticator" ref="defineModularRealmAuthenticator" />
		<property name="realms">
			<list>
				<bean id="frontPasswAuthorizingRealm" class="com.oseasy.pcore.modules.sys.security.FrontPasswAuthorizingRealm" />
				<bean id="frontAuthorizingRealm" class="com.oseasy.pcore.modules.sys.security.FrontAuthorizingRealm" />
				<bean id="frontCasRealm" class="com.oseasy.pcas.modules.cas.security.FrontCasRealm" />
			</list>
		</property>
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	<!-- 前台配置 *************************** -->
	<!-- 自定义会话管理配置 -->
	<bean id="sessionManager"
		class="com.oseasy.pcore.common.security.shiro.session.SessionManager">
		<property name="sessionDAO" ref="sessionDAO" />

		<!-- 会话超时时间，单位：毫秒 -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}" />

		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话 -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}" />
		<!-- <property name="sessionValidationSchedulerEnabled" value="false"/> -->
		<property name="sessionValidationSchedulerEnabled" value="true" />

		<property name="sessionIdCookie" ref="sessionIdCookie" />
		<property name="sessionIdCookieEnabled" value="true" />
	</bean>

	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="initiate.session.id_${filter.frontOrBackground}" />
	</bean>

	<!-- 自定义Session存储容器 -->
	<bean id="sessionDAO"
		class="com.oseasy.pcore.common.security.shiro.session.JedisSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<!-- <property name="sessionKeyPrefix" value="${redis.keyPrefix}_session${filter.frontOrBackground}_" /> -->
	</bean>
	<!-- <bean id="sessionDAO" class="com.oseasy.pcore.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" /> <property name="activeSessionsCacheName"
		value="activeSessionsCache" /> <property name="cacheManager" ref="shiroCacheManager"
		/> </bean> -->

	<!-- 自定义系统缓存管理器 -->
	<bean id="shiroCacheManager"
		class="com.oseasy.pcore.common.security.shiro.cache.JedisCacheManager">
		<property name="cacheKeyPrefix" value="${redis.keyPrefix}_cache_" />
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>